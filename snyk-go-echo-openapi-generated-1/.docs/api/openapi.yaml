openapi: 3.0.3
info:
  title: Snyk API
  version: REST
servers:
- description: Snyk REST API
  url: https://api.snyk.io/rest
security:
- BearerAuth: []
- APIToken: []
tags:
- description: An example of a v3 API resource
  name: Examples
- description: The OpenAPI specification for this service.
  name: OpenAPI
- description: |
    A project is a single external resource which has been scanned by Snyk such as a manifest file or a container image. It may also be continuously monitored by Snyk.
  name: Projects
- description: |
    A target is the external source of data from which Snyk can scan resources and create projects. Many projects may exist for the same target.
  name: Targets
- description: Snyk Users
  name: Users
paths:
  /openapi:
    get:
      description: List available versions of OpenAPI specification
      operationId: listAPIVersions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: List of available versions is returned
          headers:
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      security: []
      tags:
      - OpenAPI
  /openapi/{version}:
    get:
      description: Get OpenAPI specification effective at version.
      operationId: getAPIVersion
      parameters:
      - description: The requested version of the API
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OpenAPI specification matching requested version is returned
          headers:
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      security: []
      tags:
      - OpenAPI
  /orgs/{org_id}/projects:
    get:
      description: Get a list of an organization's projects.
      operationId: getOrgsProjects
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      - description: The id of the org to return a list of projects
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Return projects that prefix-match the provided name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Return projects that match the provided origin
        explode: true
        in: query
        name: origin
        required: false
        schema:
          type: string
        style: form
      - description: Return projects that match the provided type
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Return projects that match the provided status
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - active
          - inactive
          type: string
        style: form
      - description: Return projects that match all provided tags
        explode: false
        in: query
        name: tags
        required: false
        schema:
          items:
            pattern: "^[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+$"
            type: string
          type: array
        style: form
      - description: Return projects that have at least 1 option
        explode: false
        in: query
        name: businessCriticality
        required: false
        schema:
          items:
            enum:
            - critical
            - high
            - medium
            - low
            type: string
          type: array
        style: form
      - description: Return projects that have at least 1 option
        explode: false
        in: query
        name: environment
        required: false
        schema:
          items:
            enum:
            - frontend
            - backend
            - internal
            - external
            - mobile
            - saas
            - onprem
            - hosted
            - distributed
            type: string
          type: array
        style: form
      - description: Return projects that have at least 1 option
        explode: false
        in: query
        name: lifecycle
        required: false
        schema:
          items:
            enum:
            - production
            - development
            - sandbox
            type: string
          type: array
        style: form
      - description: Return projects that belong to the provided target
        explode: true
        in: query
        name: targetId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getOrgsProjects_200_response'
          description: A list of projects is returned for the targeted org
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get projects by org ID.
      tags:
      - Projects
      x-snyk-api-releases:
      - 2021-06-04~beta
      - 2022-08-12~experimental
      x-snyk-api-version: 2021-06-04~beta
    x-snyk-api-resource: projects
  /orgs/{org_id}/targets:
    get:
      description: Get a list of an organization's targets.
      operationId: getOrgsTargets
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: Return the page of results immediately after this cursor
        example: v1.eyJpZCI6IjEwMDAifQo=
        explode: true
        in: query
        name: starting_after
        required: false
        schema:
          type: string
        style: form
      - description: Return the page of results immediately before this cursor
        example: v1.eyJpZCI6IjExMDAifQo=
        explode: true
        in: query
        name: ending_before
        required: false
        schema:
          type: string
        style: form
      - description: Number of results to return per page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 10
          multipleOf: 10
          type: integer
        style: form
      - description: The id of the org to return a list of targets
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Return targets that match the provided value of isPrivate
        explode: true
        in: query
        name: isPrivate
        required: false
        schema:
          type: boolean
        style: form
      - description: Return targets that match the provided remoteUrl. Currently null
          for all projects except those imported from the CLI
        explode: true
        in: query
        name: remoteUrl
        required: false
        schema:
          type: string
        style: form
      - description: Return targets that match the provided origin
        explode: true
        in: query
        name: origin
        required: false
        schema:
          type: string
        style: form
      - description: Whether to exclude targets from the response that have no associated
          projects
        explode: true
        in: query
        name: excludeEmpty
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Return targets with display names starting with the provided
          string
        explode: true
        in: query
        name: displayName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getOrgsTargets_200_response'
          description: A list of targets is returned for the targeted org
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get targets by org ID
      tags:
      - Targets
      x-snyk-api-releases:
      - 2021-08-20~beta
      x-snyk-api-version: 2021-08-20~beta
    x-snyk-api-resource: targets
  /orgs/{org_id}/targets/{target_id}:
    delete:
      description: Delete the specified target. Will fail if the target has any projects.
      operationId: deleteOrgsTarget
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: The id of the org to return the target from
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The id of the target to return
        explode: false
        in: path
        name: target_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: The target is deleted if it is found in the specified org and
            has no projects
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "409":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unprocessable Entity: The target cannot be deleted as it has\
            \ projects."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Delete target by target ID
      tags:
      - Targets
      x-snyk-api-releases:
      - 2021-09-29~beta
      x-snyk-api-version: 2021-09-29~beta
    get:
      description: Get a specified target for an organization.
      operationId: getOrgsTarget
      parameters:
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      - description: The id of the org to return the target from
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The id of the target to return
        explode: false
        in: path
        name: target_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getOrgsTarget_200_response'
          description: A single target is returned if it is found in the specified
            org
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get target by org ID
      tags:
      - Targets
      x-snyk-api-releases:
      - 2021-08-20~beta
      x-snyk-api-version: 2021-08-20~beta
    x-snyk-api-resource: targets
  /orgs/{org_id}/users/{id}:
    get:
      description: Get a summary of user.
      operationId: getUser
      parameters:
      - description: The id of the org
        explode: false
        in: path
        name: org_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The id of the user
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The requested version of the endpoint to process the request
        example: 2021-06-04
        explode: true
        in: query
        name: version
        required: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        style: form
      responses:
        "200":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/getUser_200_response'
          description: User details
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "401":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "403":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "404":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "500":
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
      summary: Get user by ID
      tags:
      - Users
      x-snyk-api-releases:
      - 2021-09-13~beta
      x-snyk-api-version: 2021-09-13~beta
    x-snyk-api-resource: users
components:
  headers:
    DeprecationHeader:
      description: |
        A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
        https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
      example: 2021-07-01T00:00:00Z
      explode: false
      schema:
        format: date-time
        type: string
      style: simple
    InternalGlooNormalizedPathHeader:
      description: |
        An internal header used by Snyk's API-Gateway for analytics.
      explode: false
      schema:
        type: string
      style: simple
      x-snyk-internal: true
    InternalGlooOrgIdHeader:
      description: |
        An internal header used by Snyk's API-Gateway for analytics.
      explode: false
      schema:
        format: uuid
        type: string
      style: simple
      x-snyk-internal: true
    RequestIdResponseHeader:
      description: |
        A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
      example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
      explode: false
      schema:
        format: uuid
        type: string
      style: simple
    SunsetHeader:
      description: |
        A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
        https://datatracker.ietf.org/doc/html/rfc8594
      example: 2021-08-02T00:00:00Z
      explode: false
      schema:
        format: date-time
        type: string
      style: simple
    VersionRequestedResponseHeader:
      description: A header containing the version of the endpoint requested by the
        caller.
      example: 2021-06-04
      explode: false
      schema:
        $ref: '#/components/schemas/QueryVersion'
      style: simple
    VersionServedResponseHeader:
      description: A header containing the version of the endpoint that was served
        by the API.
      example: 2021-06-04
      explode: false
      schema:
        $ref: '#/components/schemas/ActualVersion'
      style: simple
    VersionStageResponseHeader:
      description: |
        A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
      explode: false
      schema:
        enum:
        - wip
        - experimental
        - beta
        - ga
        - deprecated
        - sunset
        example: ga
        type: string
      style: simple
  parameters:
    EndingBefore:
      description: Return the page of results immediately before this cursor
      example: v1.eyJpZCI6IjExMDAifQo=
      explode: true
      in: query
      name: ending_before
      required: false
      schema:
        type: string
      style: form
    Limit:
      description: Number of results to return per page
      example: 10
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 10
        format: int32
        maximum: 100
        minimum: 10
        multipleOf: 10
        type: integer
      style: form
    StartingAfter:
      description: Return the page of results immediately after this cursor
      example: v1.eyJpZCI6IjEwMDAifQo=
      explode: true
      in: query
      name: starting_after
      required: false
      schema:
        type: string
      style: form
    Version:
      description: The requested version of the endpoint to process the request
      example: 2021-06-04
      explode: true
      in: query
      name: version
      required: true
      schema:
        $ref: '#/components/schemas/QueryVersion'
      style: form
  responses:
    "400":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: "Bad Request: A parameter provided as a part of the request was\
        \ invalid."
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "401":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: "Unauthorized: the request requires an authentication token."
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "403":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: "Forbidden: the request requires an authentication token with more\
        \ or different permissions."
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "404":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: "Not Found: The resource being operated on could not be found."
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
    "500":
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
      description: "Internal Server Error: An error was encountered while attempting\
        \ to process the request."
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
  schemas:
    ActualVersion:
      description: Resolved API version
      pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
      type: string
    DeprecatedRelationship:
      example:
        data:
          id: e661d4ef-5ad5-4cef-ad16-5157cefa83f5
          type: org
        links:
          self:
            href: /v3/orgs/e661d4ef-5ad5-4cef-ad16-5157cefa83f5
      properties:
        data:
          $ref: '#/components/schemas/DeprecatedRelationship_data'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          additionalProperties: true
          description: Free-form object that may contain non-standard information.
          example:
            key1: value1
            key2:
              sub_key: sub_value
            key3:
            - array_value1
            - array_value2
          type: object
      required:
      - data
      type: object
    Error:
      additionalProperties: false
      example:
        detail: Not Found
        status: "404"
      properties:
        code:
          description: "An application-specific error code, expressed as a string\
            \ value."
          example: entity-not-found
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          example: "The request was missing these required fields: ..."
          type: string
        id:
          description: A unique identifier for this particular occurrence of the problem.
          example: f16c31b5-6129-4571-add8-d589da9be524
          format: uuid
          type: string
        links:
          $ref: '#/components/schemas/ErrorLink'
        meta:
          additionalProperties: true
          example:
            key: value
          type: object
        source:
          $ref: '#/components/schemas/Error_source'
        status:
          description: "The HTTP status code applicable to this problem, expressed\
            \ as a string value."
          example: "400"
          pattern: "^[45]\\d\\d$"
          type: string
        title:
          description: "A short, human-readable summary of the problem that SHOULD\
            \ NOT change from occurrence to occurrence of the problem, except for\
            \ purposes of localization."
          example: Bad request
          type: string
      required:
      - detail
      - status
      type: object
    ErrorDocument:
      additionalProperties: false
      example:
        errors:
        - detail: Permission denied for this resource
          status: "403"
        jsonapi:
          version: "1.0"
      properties:
        errors:
          example:
          - detail: Permission denied for this resource
            status: "403"
          items:
            $ref: '#/components/schemas/Error'
          minItems: 1
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
      required:
      - errors
      - jsonapi
      type: object
    ErrorLink:
      additionalProperties: false
      description: A link that leads to further details about this particular occurrance
        of the problem.
      example:
        about: https://example.com/about_this_error
      properties:
        about:
          $ref: '#/components/schemas/LinkProperty'
      type: object
    HelloWorld:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/HelloWorld_attributes'
        id:
          format: uuid
          type: string
        type:
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    JsonApi:
      additionalProperties: false
      example:
        version: "1.0"
      properties:
        version:
          description: Version of the JSON API specification this server supports.
          example: "1.0"
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)$"
          type: string
      required:
      - version
      type: object
    LinkProperty:
      example: https://example.com/api/resource
      oneOf:
      - description: A string containing the link’s URL.
        example: https://example.com/api/resource
        type: string
      - $ref: '#/components/schemas/LinkProperty_oneOf'
    Links:
      additionalProperties: false
      properties:
        first:
          $ref: '#/components/schemas/LinkProperty'
        last:
          $ref: '#/components/schemas/LinkProperty'
        next:
          $ref: '#/components/schemas/LinkProperty'
        prev:
          $ref: '#/components/schemas/LinkProperty'
        related:
          $ref: '#/components/schemas/LinkProperty'
        self:
          $ref: '#/components/schemas/LinkProperty'
      type: object
    Meta:
      additionalProperties: true
      description: Free-form object that may contain non-standard information.
      example:
        key1: value1
        key2:
          sub_key: sub_value
        key3:
        - array_value1
        - array_value2
      type: object
    ProjectDeprecated:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/ProjectDeprecated_attributes'
        id:
          description: The ID.
          example: 331ede0a-de94-456f-b788-166caeca58bf
          format: uuid
          type: string
        relationships:
          $ref: '#/components/schemas/ProjectDeprecated_relationships'
        type:
          description: Content type.
          example: projects
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    QueryVersion:
      description: Requested API version
      pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
      type: string
    Tag:
      additionalProperties: false
      properties:
        key:
          example: tag-key
          type: string
        value:
          example: tag-value
          type: string
      required:
      - key
      - value
      type: object
    Target:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/Target_attributes'
        id:
          description: The Snyk ID corresponding to this target
          example: 55a348e2-c3ad-4bbc-b40e-9b232d1f4121
          format: uuid
          type: string
        relationships:
          $ref: '#/components/schemas/Target_relationships'
        type:
          description: Content type.
          example: target
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    User:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/User_attributes'
        id:
          description: The Snyk ID corresponding to this user
          example: 55a348e2-c3ad-4bbc-b40e-9b232d1f4121
          format: uuid
          type: string
        type:
          description: Content type.
          example: user
          type: string
      required:
      - attributes
      - id
      - type
      type: object
    getOrgsProjects_200_response:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProjectDeprecated'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/Links'
      required:
      - data
      - jsonapi
      - links
      type: object
    getOrgsTargets_200_response:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/Target'
          type: array
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/Links'
      required:
      - data
      - jsonapi
      - links
      type: object
    getOrgsTarget_200_response:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Target'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/Links'
      required:
      - data
      - jsonapi
      type: object
    getUser_200_response:
      properties:
        data:
          $ref: '#/components/schemas/User'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
      required:
      - data
      - jsonapi
      type: object
    DeprecatedRelationship_data:
      additionalProperties: false
      properties:
        id:
          example: 4a72d1db-b465-4764-99e1-ecedad03b06a
          format: uuid
          type: string
        type:
          description: Type of the related resource
          example: resource
          pattern: "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$"
          type: string
      required:
      - id
      - type
      type: object
    Error_source:
      additionalProperties: false
      example:
        pointer: /data/attributes
      properties:
        parameter:
          description: A string indicating which URI query parameter caused the error.
          example: param1
          type: string
        pointer:
          description: "A JSON Pointer [RFC6901] to the associated entity in the request\
            \ document."
          example: /data/attributes
          type: string
      type: object
    HelloWorld_attributes_requestSubject:
      additionalProperties: false
      properties:
        clientId:
          format: uuid
          type: string
        publicId:
          format: uuid
          type: string
        type:
          type: string
      required:
      - publicId
      - type
      type: object
    HelloWorld_attributes:
      additionalProperties: false
      properties:
        betaField:
          type: string
        message:
          type: string
        requestSubject:
          $ref: '#/components/schemas/HelloWorld_attributes_requestSubject'
      required:
      - betaField
      - message
      - requestSubject
      type: object
    LinkProperty_oneOf:
      example: "{\"href\":\"https://example.com/api/resource\"}"
      properties:
        href:
          description: A string containing the link’s URL.
          example: https://example.com/api/resource
          type: string
        meta:
          additionalProperties: true
          description: Free-form object that may contain non-standard information.
          example:
            key1: value1
            key2:
              sub_key: sub_value
            key3:
            - array_value1
            - array_value2
          type: object
      required:
      - href
      type: object
    ProjectDeprecated_attributes:
      additionalProperties: false
      properties:
        businessCriticality:
          example:
          - medium
          items:
            type: string
          type: array
        created:
          description: The date that the project was created on
          example: 2021-05-29T09:50:54.014Z
          format: date-time
          type: string
        environment:
          example:
          - external
          - hosted
          items:
            type: string
          type: array
        lifecycle:
          example:
          - production
          items:
            type: string
          type: array
        name:
          example: snyk/goof
          type: string
        origin:
          description: The origin the project was added from
          example: github
          type: string
        status:
          description: Describes if a project is currently monitored or it is de-activated
          example: active
          type: string
        tags:
          example:
          - key: tag-key
            value: tag-value
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        targetReference:
          description: "The identifier for which revision of the resource is scanned\
            \ by Snyk. For example this may be a branch for SCM project, or a tag\
            \ for a container image"
          example: master
          nullable: true
          type: string
        type:
          description: The package manager of the project
          example: maven
          type: string
      required:
      - created
      - name
      - origin
      - status
      - type
      type: object
    ProjectDeprecated_relationships:
      additionalProperties: false
      properties:
        importingUser:
          $ref: '#/components/schemas/DeprecatedRelationship'
        org:
          $ref: '#/components/schemas/DeprecatedRelationship'
        owner:
          $ref: '#/components/schemas/DeprecatedRelationship'
        target:
          $ref: '#/components/schemas/DeprecatedRelationship'
      type: object
    Target_attributes:
      additionalProperties: false
      properties:
        displayName:
          description: A human readable name for this target
          example: snyk-fixtures/goof
          type: string
        isPrivate:
          description: "If the resource is private, or publicly accessible"
          example: false
          type: boolean
        origin:
          description: The origin that this target relates to
          example: github
          type: string
        remoteUrl:
          description: The url for the resource. Currently only set for targets imported
            from the CLI
          example: http://github.com/snyk/local-goof
          nullable: true
          type: string
      required:
      - displayName
      - isPrivate
      - origin
      - remoteUrl
      type: object
    Target_relationships:
      additionalProperties: false
      properties:
        org:
          $ref: '#/components/schemas/DeprecatedRelationship'
      type: object
    User_attributes_membership:
      properties:
        created_at:
          description: The date the membership was established.
          example: 2022-09-14T09:19:29.206Z
          format: date-time
          type: string
        strategy:
          description: "Whether the membership is a direct, or indirect membership."
          enum:
          - direct
          - indirect
          example: direct
          type: string
      type: object
    User_attributes:
      additionalProperties: false
      properties:
        email:
          description: The email of the user.
          example: user@someorg.com
          type: string
        membership:
          $ref: '#/components/schemas/User_attributes_membership'
        name:
          description: The name of the user.
          example: user
          type: string
        username:
          description: The username of the user.
          example: username
          type: string
      type: object
  securitySchemes:
    APIToken:
      description: API key value must be prefixed with \"Token \".
      in: header
      name: Authorization
      type: apiKey
    BearerAuth:
      scheme: bearer
      type: http
x-snyk-api-lifecycle: released
x-snyk-api-version: 2021-09-29~beta
