/*
 * Snyk API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: REST
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/rest/",
		Index,
	},

	Route{
		"GetAPIVersion",
		strings.ToUpper("Get"),
		"/rest/openapi/{version}",
		GetAPIVersion,
	},

	Route{
		"ListAPIVersions",
		strings.ToUpper("Get"),
		"/rest/openapi",
		ListAPIVersions,
	},

	Route{
		"GetOrgsProjects",
		strings.ToUpper("Get"),
		"/rest/orgs/{org_id}/projects",
		GetOrgsProjects,
	},

	Route{
		"DeleteOrgsTarget",
		strings.ToUpper("Delete"),
		"/rest/orgs/{org_id}/targets/{target_id}",
		DeleteOrgsTarget,
	},

	Route{
		"GetOrgsTarget",
		strings.ToUpper("Get"),
		"/rest/orgs/{org_id}/targets/{target_id}",
		GetOrgsTarget,
	},

	Route{
		"GetOrgsTargets",
		strings.ToUpper("Get"),
		"/rest/orgs/{org_id}/targets",
		GetOrgsTargets,
	},

	Route{
		"GetUser",
		strings.ToUpper("Get"),
		"/rest/orgs/{org_id}/users/{id}",
		GetUser,
	},
}
