openapi: 3.0.3
info:
  title: Snyk API
  version: REST
servers:
- url: https://api.snyk.io/rest
  description: Snyk REST API
security:
- BearerAuth: []
- APIToken: []
tags:
- name: Examples
  description: An example of a v3 API resource
- name: OpenAPI
  description: The OpenAPI specification for this service.
- name: Projects
  description: |
    A project is a single external resource which has been scanned by Snyk such as a manifest file or a container image. It may also be continuously monitored by Snyk.
- name: Targets
  description: |
    A target is the external source of data from which Snyk can scan resources and create projects. Many projects may exist for the same target.
- name: Users
  description: Snyk Users
paths:
  /openapi:
    get:
      tags:
      - OpenAPI
      description: List available versions of OpenAPI specification
      operationId: listAPIVersions
      responses:
        "200":
          description: List of available versions is returned
          headers:
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
        "400":
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "401":
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "404":
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "500":
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
      security: []
  /openapi/{version}:
    get:
      tags:
      - OpenAPI
      description: Get OpenAPI specification effective at version.
      operationId: getAPIVersion
      parameters:
      - name: version
        in: path
        description: The requested version of the API
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OpenAPI specification matching requested version is returned
          headers:
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "400":
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "401":
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "404":
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "500":
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
      security: []
  /orgs/{org_id}/projects:
    get:
      tags:
      - Projects
      summary: Get projects by org ID.
      description: Get a list of an organization's projects.
      operationId: getOrgsProjects
      parameters:
      - name: version
        in: query
        description: The requested version of the endpoint to process the request
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        example: 2021-06-04
      - name: starting_after
        in: query
        description: Return the page of results immediately after this cursor
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: v1.eyJpZCI6IjEwMDAifQo=
      - name: ending_before
        in: query
        description: Return the page of results immediately before this cursor
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: v1.eyJpZCI6IjExMDAifQo=
      - name: limit
        in: query
        description: Number of results to return per page
        required: false
        style: form
        explode: true
        schema:
          multipleOf: 10
          maximum: 100
          minimum: 10
          type: integer
          format: int32
          default: 10
        example: 10
      - name: org_id
        in: path
        description: The id of the org to return a list of projects
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: name
        in: query
        description: Return projects that prefix-match the provided name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: origin
        in: query
        description: Return projects that match the provided origin
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: Return projects that match the provided type
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: Return projects that match the provided status
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - active
          - inactive
      - name: tags
        in: query
        description: Return projects that match all provided tags
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            pattern: "^[a-zA-Z0-9_-]+:[a-zA-Z0-9_-]+$"
            type: string
      - name: businessCriticality
        in: query
        description: Return projects that have at least 1 option
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - critical
            - high
            - medium
            - low
      - name: environment
        in: query
        description: Return projects that have at least 1 option
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - frontend
            - backend
            - internal
            - external
            - mobile
            - saas
            - onprem
            - hosted
            - distributed
      - name: lifecycle
        in: query
        description: Return projects that have at least 1 option
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
            enum:
            - production
            - development
            - sandbox
      - name: targetId
        in: query
        description: Return projects that belong to the provided target
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: A list of projects is returned for the targeted org
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "401":
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "403":
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "404":
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "500":
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
      x-snyk-api-releases:
      - 2021-06-04~beta
      - 2022-08-12~experimental
      x-snyk-api-version: 2021-06-04~beta
    x-snyk-api-resource: projects
  /orgs/{org_id}/targets:
    get:
      tags:
      - Targets
      summary: Get targets by org ID
      description: Get a list of an organization's targets.
      operationId: getOrgsTargets
      parameters:
      - name: version
        in: query
        description: The requested version of the endpoint to process the request
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        example: 2021-06-04
      - name: starting_after
        in: query
        description: Return the page of results immediately after this cursor
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: v1.eyJpZCI6IjEwMDAifQo=
      - name: ending_before
        in: query
        description: Return the page of results immediately before this cursor
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: v1.eyJpZCI6IjExMDAifQo=
      - name: limit
        in: query
        description: Number of results to return per page
        required: false
        style: form
        explode: true
        schema:
          multipleOf: 10
          maximum: 100
          minimum: 10
          type: integer
          format: int32
          default: 10
        example: 10
      - name: org_id
        in: path
        description: The id of the org to return a list of targets
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: isPrivate
        in: query
        description: Return targets that match the provided value of isPrivate
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: remoteUrl
        in: query
        description: Return targets that match the provided remoteUrl. Currently null
          for all projects except those imported from the CLI
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: origin
        in: query
        description: Return targets that match the provided origin
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: excludeEmpty
        in: query
        description: Whether to exclude targets from the response that have no associated
          projects
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: displayName
        in: query
        description: Return targets with display names starting with the provided
          string
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A list of targets is returned for the targeted org
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "401":
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "403":
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "404":
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "500":
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
      x-snyk-api-releases:
      - 2021-08-20~beta
      x-snyk-api-version: 2021-08-20~beta
    x-snyk-api-resource: targets
  /orgs/{org_id}/targets/{target_id}:
    get:
      tags:
      - Targets
      summary: Get target by org ID
      description: Get a specified target for an organization.
      operationId: getOrgsTarget
      parameters:
      - name: version
        in: query
        description: The requested version of the endpoint to process the request
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        example: 2021-06-04
      - name: org_id
        in: path
        description: The id of the org to return the target from
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: target_id
        in: path
        description: The id of the target to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: A single target is returned if it is found in the specified
            org
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "400":
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "401":
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "404":
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "500":
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
      x-snyk-api-releases:
      - 2021-08-20~beta
      x-snyk-api-version: 2021-08-20~beta
    delete:
      tags:
      - Targets
      summary: Delete target by target ID
      description: Delete the specified target. Will fail if the target has any projects.
      operationId: deleteOrgsTarget
      parameters:
      - name: version
        in: query
        description: The requested version of the endpoint to process the request
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        example: 2021-06-04
      - name: org_id
        in: path
        description: The id of the org to return the target from
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: target_id
        in: path
        description: The id of the target to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "204":
          description: The target is deleted if it is found in the specified org and
            has no projects
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
        "400":
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "401":
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "404":
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "409":
          description: "Unprocessable Entity: The target cannot be deleted as it has\
            \ projects."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "500":
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
      x-snyk-api-releases:
      - 2021-09-29~beta
      x-snyk-api-version: 2021-09-29~beta
    x-snyk-api-resource: targets
  /orgs/{org_id}/users/{id}:
    get:
      tags:
      - Users
      summary: Get user by ID
      description: Get a summary of user.
      operationId: getUser
      parameters:
      - name: org_id
        in: path
        description: The id of the org
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: id
        in: path
        description: The id of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      - name: version
        in: query
        description: The requested version of the endpoint to process the request
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/QueryVersion'
        example: 2021-06-04
      responses:
        "200":
          description: User details
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        "400":
          description: "Bad Request: A parameter provided as a part of the request\
            \ was invalid."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "401":
          description: "Unauthorized: the request requires an authentication token."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "403":
          description: "Forbidden: the request requires an authentication token with\
            \ more or different permissions."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "404":
          description: "Not Found: The resource being operated on could not be found."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
        "500":
          description: "Internal Server Error: An error was encountered while attempting\
            \ to process the request."
          headers:
            deprecation:
              $ref: '#/components/headers/DeprecationHeader'
            snyk-request-id:
              $ref: '#/components/headers/RequestIdResponseHeader'
            snyk-version-lifecycle-stage:
              $ref: '#/components/headers/VersionStageResponseHeader'
            snyk-version-requested:
              $ref: '#/components/headers/VersionRequestedResponseHeader'
            snyk-version-served:
              $ref: '#/components/headers/VersionServedResponseHeader'
            sunset:
              $ref: '#/components/headers/SunsetHeader'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ErrorDocument'
      x-snyk-api-releases:
      - 2021-09-13~beta
      x-snyk-api-version: 2021-09-13~beta
    x-snyk-api-resource: users
components:
  schemas:
    ActualVersion:
      pattern: "^((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?)$"
      type: string
      description: Resolved API version
    DeprecatedRelationship:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DeprecatedRelationship_data'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        data:
          id: e661d4ef-5ad5-4cef-ad16-5157cefa83f5
          type: org
        links:
          self:
            href: /v3/orgs/e661d4ef-5ad5-4cef-ad16-5157cefa83f5
    Error:
      required:
      - detail
      - status
      type: object
      properties:
        code:
          type: string
          description: "An application-specific error code, expressed as a string\
            \ value."
          example: entity-not-found
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of
            the problem.
          example: "The request was missing these required fields: ..."
        id:
          type: string
          description: A unique identifier for this particular occurrence of the problem.
          format: uuid
          example: f16c31b5-6129-4571-add8-d589da9be524
        links:
          $ref: '#/components/schemas/ErrorLink'
        meta:
          type: object
          additionalProperties: true
          example:
            key: value
        source:
          $ref: '#/components/schemas/Error_source'
        status:
          pattern: "^[45]\\d\\d$"
          type: string
          description: "The HTTP status code applicable to this problem, expressed\
            \ as a string value."
          example: "400"
        title:
          type: string
          description: "A short, human-readable summary of the problem that SHOULD\
            \ NOT change from occurrence to occurrence of the problem, except for\
            \ purposes of localization."
          example: Bad request
      additionalProperties: false
      example:
        detail: Not Found
        status: "404"
    ErrorDocument:
      required:
      - errors
      - jsonapi
      type: object
      properties:
        errors:
          minItems: 1
          type: array
          example:
          - detail: Permission denied for this resource
            status: "403"
          items:
            $ref: '#/components/schemas/Error'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
      additionalProperties: false
      example:
        errors:
        - detail: Permission denied for this resource
          status: "403"
        jsonapi:
          version: "1.0"
    ErrorLink:
      type: object
      properties:
        about:
          $ref: '#/components/schemas/LinkProperty'
      additionalProperties: false
      description: A link that leads to further details about this particular occurrance
        of the problem.
      example:
        about: https://example.com/about_this_error
    HelloWorld:
      required:
      - attributes
      - id
      - type
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/HelloWorld_attributes'
        id:
          type: string
          format: uuid
        type:
          type: string
      additionalProperties: false
    JsonApi:
      required:
      - version
      type: object
      properties:
        version:
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)$"
          type: string
          description: Version of the JSON API specification this server supports.
          example: "1.0"
      additionalProperties: false
      example:
        version: "1.0"
    LinkProperty:
      example: https://example.com/api/resource
      oneOf:
      - type: string
        description: A string containing the link’s URL.
        example: https://example.com/api/resource
      - required:
        - href
        type: object
        properties:
          href:
            type: string
            description: A string containing the link’s URL.
            example: https://example.com/api/resource
          meta:
            $ref: '#/components/schemas/Meta'
        additionalProperties: false
        example:
          href: https://example.com/api/resource
    Links:
      type: object
      properties:
        first:
          $ref: '#/components/schemas/LinkProperty'
        last:
          $ref: '#/components/schemas/LinkProperty'
        next:
          $ref: '#/components/schemas/LinkProperty'
        prev:
          $ref: '#/components/schemas/LinkProperty'
        related:
          $ref: '#/components/schemas/LinkProperty'
        self:
          $ref: '#/components/schemas/LinkProperty'
      additionalProperties: false
      example:
        next: null
        last: null
        related: null
        prev: null
        self: null
        first: https://example.com/api/resource
    Meta:
      type: object
      additionalProperties: true
      description: Free-form object that may contain non-standard information.
      example:
        key1: value1
        key2:
          sub_key: sub_value
        key3:
        - array_value1
        - array_value2
      x-schema-name: Meta
    ProjectDeprecated:
      required:
      - attributes
      - id
      - type
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/ProjectDeprecated_attributes'
        id:
          type: string
          description: The ID.
          format: uuid
          example: 331ede0a-de94-456f-b788-166caeca58bf
        relationships:
          $ref: '#/components/schemas/ProjectDeprecated_relationships'
        type:
          type: string
          description: Content type.
          example: projects
      additionalProperties: false
      example:
        relationships:
          owner: null
          org: null
          importingUser:
            data:
              id: e661d4ef-5ad5-4cef-ad16-5157cefa83f5
              type: org
            links:
              self:
                href: /v3/orgs/e661d4ef-5ad5-4cef-ad16-5157cefa83f5
          target: null
        attributes:
          lifecycle:
          - production
          environment:
          - external
          - hosted
          businessCriticality:
          - medium
          created: 2021-05-29T09:50:54.014Z
          origin: github
          name: snyk/goof
          type: maven
          targetReference: master
          status: active
          tags:
          - key: tag-key
            value: tag-value
        id: 331ede0a-de94-456f-b788-166caeca58bf
        type: projects
    QueryVersion:
      pattern: "^(wip|work-in-progress|experimental|beta|((([0-9]{4})-([0-1][0-9]))-((3[01])|(0[1-9])|([12][0-9]))(~(wip|work-in-progress|experimental|beta))?))$"
      type: string
      description: Requested API version
    Tag:
      required:
      - key
      - value
      type: object
      properties:
        key:
          type: string
          example: tag-key
        value:
          type: string
          example: tag-value
      additionalProperties: false
    Target:
      required:
      - attributes
      - id
      - type
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/Target_attributes'
        id:
          type: string
          description: The Snyk ID corresponding to this target
          format: uuid
          example: 55a348e2-c3ad-4bbc-b40e-9b232d1f4121
        relationships:
          $ref: '#/components/schemas/Target_relationships'
        type:
          type: string
          description: Content type.
          example: target
      additionalProperties: false
      example:
        relationships:
          org:
            data:
              id: e661d4ef-5ad5-4cef-ad16-5157cefa83f5
              type: org
            links:
              self:
                href: /v3/orgs/e661d4ef-5ad5-4cef-ad16-5157cefa83f5
        attributes:
          displayName: snyk-fixtures/goof
          origin: github
          remoteUrl: http://github.com/snyk/local-goof
          isPrivate: false
        id: 55a348e2-c3ad-4bbc-b40e-9b232d1f4121
        type: target
    User:
      required:
      - attributes
      - id
      - type
      type: object
      properties:
        attributes:
          $ref: '#/components/schemas/User_attributes'
        id:
          type: string
          description: The Snyk ID corresponding to this user
          format: uuid
          example: 55a348e2-c3ad-4bbc-b40e-9b232d1f4121
        type:
          type: string
          description: Content type.
          example: user
      additionalProperties: false
      example:
        attributes:
          name: user
          membership:
            created_at: 2022-09-14T09:19:29.206Z
            strategy: direct
          email: user@someorg.com
          username: username
        id: 55a348e2-c3ad-4bbc-b40e-9b232d1f4121
        type: user
    inline_response_200:
      required:
      - data
      - jsonapi
      - links
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDeprecated'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/Links'
      additionalProperties: false
      example:
        jsonapi:
          version: "1.0"
        data:
        - relationships:
            owner: null
            org: null
            importingUser:
              data:
                id: e661d4ef-5ad5-4cef-ad16-5157cefa83f5
                type: org
              links:
                self:
                  href: /v3/orgs/e661d4ef-5ad5-4cef-ad16-5157cefa83f5
            target: null
          attributes:
            lifecycle:
            - production
            environment:
            - external
            - hosted
            businessCriticality:
            - medium
            created: 2021-05-29T09:50:54.014Z
            origin: github
            name: snyk/goof
            type: maven
            targetReference: master
            status: active
            tags:
            - key: tag-key
              value: tag-value
          id: 331ede0a-de94-456f-b788-166caeca58bf
          type: projects
        - relationships:
            owner: null
            org: null
            importingUser:
              data:
                id: e661d4ef-5ad5-4cef-ad16-5157cefa83f5
                type: org
              links:
                self:
                  href: /v3/orgs/e661d4ef-5ad5-4cef-ad16-5157cefa83f5
            target: null
          attributes:
            lifecycle:
            - production
            environment:
            - external
            - hosted
            businessCriticality:
            - medium
            created: 2021-05-29T09:50:54.014Z
            origin: github
            name: snyk/goof
            type: maven
            targetReference: master
            status: active
            tags:
            - key: tag-key
              value: tag-value
          id: 331ede0a-de94-456f-b788-166caeca58bf
          type: projects
        links:
          next: null
          last: null
          related: null
          prev: null
          self: null
          first: https://example.com/api/resource
    inline_response_200_1:
      required:
      - data
      - jsonapi
      - links
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Target'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/Links'
      additionalProperties: false
      example:
        jsonapi:
          version: "1.0"
        data:
        - relationships:
            org:
              data:
                id: e661d4ef-5ad5-4cef-ad16-5157cefa83f5
                type: org
              links:
                self:
                  href: /v3/orgs/e661d4ef-5ad5-4cef-ad16-5157cefa83f5
          attributes:
            displayName: snyk-fixtures/goof
            origin: github
            remoteUrl: http://github.com/snyk/local-goof
            isPrivate: false
          id: 55a348e2-c3ad-4bbc-b40e-9b232d1f4121
          type: target
        - relationships:
            org:
              data:
                id: e661d4ef-5ad5-4cef-ad16-5157cefa83f5
                type: org
              links:
                self:
                  href: /v3/orgs/e661d4ef-5ad5-4cef-ad16-5157cefa83f5
          attributes:
            displayName: snyk-fixtures/goof
            origin: github
            remoteUrl: http://github.com/snyk/local-goof
            isPrivate: false
          id: 55a348e2-c3ad-4bbc-b40e-9b232d1f4121
          type: target
        links:
          next: null
          last: null
          related: null
          prev: null
          self: null
          first: https://example.com/api/resource
    inline_response_200_2:
      required:
      - data
      - jsonapi
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Target'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
        links:
          $ref: '#/components/schemas/Links'
      additionalProperties: false
      example:
        jsonapi:
          version: "1.0"
        data:
          relationships:
            org:
              data:
                id: e661d4ef-5ad5-4cef-ad16-5157cefa83f5
                type: org
              links:
                self:
                  href: /v3/orgs/e661d4ef-5ad5-4cef-ad16-5157cefa83f5
          attributes:
            displayName: snyk-fixtures/goof
            origin: github
            remoteUrl: http://github.com/snyk/local-goof
            isPrivate: false
          id: 55a348e2-c3ad-4bbc-b40e-9b232d1f4121
          type: target
        links:
          next: null
          last: null
          related: null
          prev: null
          self: null
          first: https://example.com/api/resource
    inline_response_200_3:
      required:
      - data
      - jsonapi
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
        jsonapi:
          $ref: '#/components/schemas/JsonApi'
      example:
        jsonapi:
          version: "1.0"
        data:
          attributes:
            name: user
            membership:
              created_at: 2022-09-14T09:19:29.206Z
              strategy: direct
            email: user@someorg.com
            username: username
          id: 55a348e2-c3ad-4bbc-b40e-9b232d1f4121
          type: user
    DeprecatedRelationship_data:
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 4a72d1db-b465-4764-99e1-ecedad03b06a
        type:
          pattern: "^[a-z][a-z0-9]*(_[a-z][a-z0-9]*)*$"
          type: string
          description: Type of the related resource
          example: resource
      additionalProperties: false
    Error_source:
      type: object
      properties:
        parameter:
          type: string
          description: A string indicating which URI query parameter caused the error.
          example: param1
        pointer:
          type: string
          description: "A JSON Pointer [RFC6901] to the associated entity in the request\
            \ document."
          example: /data/attributes
      additionalProperties: false
      example: "{\"pointer\":\"/data/attributes\"}"
    HelloWorld_attributes_requestSubject:
      required:
      - publicId
      - type
      type: object
      properties:
        clientId:
          type: string
          format: uuid
        publicId:
          type: string
          format: uuid
        type:
          type: string
      additionalProperties: false
    HelloWorld_attributes:
      required:
      - betaField
      - message
      - requestSubject
      type: object
      properties:
        betaField:
          type: string
        message:
          type: string
        requestSubject:
          $ref: '#/components/schemas/HelloWorld_attributes_requestSubject'
      additionalProperties: false
    ProjectDeprecated_attributes:
      required:
      - created
      - name
      - origin
      - status
      - type
      type: object
      properties:
        businessCriticality:
          type: array
          example:
          - medium
          items:
            type: string
        created:
          type: string
          description: The date that the project was created on
          format: date-time
          example: 2021-05-29T09:50:54.014Z
        environment:
          type: array
          example:
          - external
          - hosted
          items:
            type: string
        lifecycle:
          type: array
          example:
          - production
          items:
            type: string
        name:
          type: string
          example: snyk/goof
        origin:
          type: string
          description: The origin the project was added from
          example: github
        status:
          type: string
          description: Describes if a project is currently monitored or it is de-activated
          example: active
        tags:
          type: array
          example:
          - key: tag-key
            value: tag-value
          items:
            $ref: '#/components/schemas/Tag'
        targetReference:
          type: string
          description: "The identifier for which revision of the resource is scanned\
            \ by Snyk. For example this may be a branch for SCM project, or a tag\
            \ for a container image"
          nullable: true
          example: master
        type:
          type: string
          description: The package manager of the project
          example: maven
      additionalProperties: false
      example:
        lifecycle:
        - production
        environment:
        - external
        - hosted
        businessCriticality:
        - medium
        created: 2021-05-29T09:50:54.014Z
        origin: github
        name: snyk/goof
        type: maven
        targetReference: master
        status: active
        tags:
        - key: tag-key
          value: tag-value
    ProjectDeprecated_relationships:
      type: object
      properties:
        importingUser:
          $ref: '#/components/schemas/DeprecatedRelationship'
        org:
          $ref: '#/components/schemas/DeprecatedRelationship'
        owner:
          $ref: '#/components/schemas/DeprecatedRelationship'
        target:
          $ref: '#/components/schemas/DeprecatedRelationship'
      additionalProperties: false
      example:
        owner: null
        org: null
        importingUser:
          data:
            id: e661d4ef-5ad5-4cef-ad16-5157cefa83f5
            type: org
          links:
            self:
              href: /v3/orgs/e661d4ef-5ad5-4cef-ad16-5157cefa83f5
        target: null
    Target_attributes:
      required:
      - displayName
      - isPrivate
      - origin
      - remoteUrl
      type: object
      properties:
        displayName:
          type: string
          description: A human readable name for this target
          example: snyk-fixtures/goof
        isPrivate:
          type: boolean
          description: "If the resource is private, or publicly accessible"
          example: false
        origin:
          type: string
          description: The origin that this target relates to
          example: github
        remoteUrl:
          type: string
          description: The url for the resource. Currently only set for targets imported
            from the CLI
          nullable: true
          example: http://github.com/snyk/local-goof
      additionalProperties: false
      example:
        displayName: snyk-fixtures/goof
        origin: github
        remoteUrl: http://github.com/snyk/local-goof
        isPrivate: false
    Target_relationships:
      type: object
      properties:
        org:
          $ref: '#/components/schemas/DeprecatedRelationship'
      additionalProperties: false
      example:
        org:
          data:
            id: e661d4ef-5ad5-4cef-ad16-5157cefa83f5
            type: org
          links:
            self:
              href: /v3/orgs/e661d4ef-5ad5-4cef-ad16-5157cefa83f5
    User_attributes_membership:
      type: object
      properties:
        created_at:
          type: string
          description: The date the membership was established.
          format: date-time
          example: 2022-09-14T09:19:29.206Z
        strategy:
          type: string
          description: "Whether the membership is a direct, or indirect membership."
          example: direct
          enum:
          - direct
          - indirect
      example:
        created_at: 2022-09-14T09:19:29.206Z
        strategy: direct
    User_attributes:
      type: object
      properties:
        email:
          type: string
          description: The email of the user.
          example: user@someorg.com
        membership:
          $ref: '#/components/schemas/User_attributes_membership'
        name:
          type: string
          description: The name of the user.
          example: user
        username:
          type: string
          description: The username of the user.
          example: username
      additionalProperties: false
      example:
        name: user
        membership:
          created_at: 2022-09-14T09:19:29.206Z
          strategy: direct
        email: user@someorg.com
        username: username
  responses:
    "400":
      description: "Bad Request: A parameter provided as a part of the request was\
        \ invalid."
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
    "401":
      description: "Unauthorized: the request requires an authentication token."
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
    "403":
      description: "Forbidden: the request requires an authentication token with more\
        \ or different permissions."
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
    "404":
      description: "Not Found: The resource being operated on could not be found."
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
    "500":
      description: "Internal Server Error: An error was encountered while attempting\
        \ to process the request."
      headers:
        deprecation:
          $ref: '#/components/headers/DeprecationHeader'
        snyk-request-id:
          $ref: '#/components/headers/RequestIdResponseHeader'
        snyk-version-lifecycle-stage:
          $ref: '#/components/headers/VersionStageResponseHeader'
        snyk-version-requested:
          $ref: '#/components/headers/VersionRequestedResponseHeader'
        snyk-version-served:
          $ref: '#/components/headers/VersionServedResponseHeader'
        sunset:
          $ref: '#/components/headers/SunsetHeader'
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/ErrorDocument'
  parameters:
    EndingBefore:
      name: ending_before
      in: query
      description: Return the page of results immediately before this cursor
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: v1.eyJpZCI6IjExMDAifQo=
    Limit:
      name: limit
      in: query
      description: Number of results to return per page
      required: false
      style: form
      explode: true
      schema:
        multipleOf: 10
        maximum: 100
        minimum: 10
        type: integer
        format: int32
        default: 10
      example: 10
    StartingAfter:
      name: starting_after
      in: query
      description: Return the page of results immediately after this cursor
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: v1.eyJpZCI6IjEwMDAifQo=
    Version:
      name: version
      in: query
      description: The requested version of the endpoint to process the request
      required: true
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/QueryVersion'
      example: 2021-06-04
  headers:
    DeprecationHeader:
      description: |
        A header containing the deprecation date of the underlying endpoint. For more information, please refer to the deprecation header RFC:
        https://tools.ietf.org/id/draft-dalal-deprecation-header-01.html
      style: simple
      explode: false
      schema:
        type: string
        format: date-time
      example: 2021-07-01T00:00:00Z
    InternalGlooNormalizedPathHeader:
      description: |
        An internal header used by Snyk's API-Gateway for analytics.
      style: simple
      explode: false
      schema:
        type: string
      x-snyk-internal: true
    InternalGlooOrgIdHeader:
      description: |
        An internal header used by Snyk's API-Gateway for analytics.
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
      x-snyk-internal: true
    RequestIdResponseHeader:
      description: |
        A header containing a unique id used for tracking this request. If you are reporting an issue to Snyk it's very helpful to provide this ID.
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
      example: 4b58e274-ec62-4fab-917b-1d2c48d6bdef
    SunsetHeader:
      description: |
        A header containing the date of when the underlying endpoint will be removed. This header is only present if the endpoint has been deprecated. Please refer to the RFC for more information:
        https://datatracker.ietf.org/doc/html/rfc8594
      style: simple
      explode: false
      schema:
        type: string
        format: date-time
      example: 2021-08-02T00:00:00Z
    VersionRequestedResponseHeader:
      description: A header containing the version of the endpoint requested by the
        caller.
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/QueryVersion'
      example: 2021-06-04
    VersionServedResponseHeader:
      description: A header containing the version of the endpoint that was served
        by the API.
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/ActualVersion'
      example: 2021-06-04
    VersionStageResponseHeader:
      description: |
        A header containing the version stage of the endpoint. This stage describes the guarantees snyk provides surrounding stability of the endpoint.
      style: simple
      explode: false
      schema:
        type: string
        example: ga
        enum:
        - wip
        - experimental
        - beta
        - ga
        - deprecated
        - sunset
  securitySchemes:
    APIToken:
      type: apiKey
      description: API key value must be prefixed with \"Token \".
      name: Authorization
      in: header
    BearerAuth:
      type: http
      scheme: bearer
x-snyk-api-lifecycle: released
x-snyk-api-version: 2021-09-29~beta
